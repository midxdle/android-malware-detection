import pandas as pd 
from sklearn.neural_network import MLPClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report, precision_score, recall_score

data = pd.read_csv("amd.csv", low_memory=False)
label_model = LabelEncoder()
data = data.apply(label_model.fit_transform)
X = data.drop(['class'], axis = 1)
y = data['class']
x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(x_train)
X_test_scaled = scaler.transform(x_test)

classifier = MLPClassifier(hidden_layer_sizes=(100, 50), max_iter=1000, random_state=42)

classifier.fit(X_train_scaled, y_train)

Y_prediction = classifier.predict(X_test_scaled)

print('\nACCURACY SCORE = ', accuracy_score(y_test, Y_prediction), '\n')
print('PRECISION SCORE = ', precision_score(y_test, Y_prediction, average = None), '\n')
print('RECALL SCORE = ', recall_score(y_test, Y_prediction, average = None), '\n')
print(classification_report(y_test, Y_prediction, zero_division = 1))
